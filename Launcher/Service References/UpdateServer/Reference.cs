//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Launcher.UpdateServer
{


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileState", Namespace="http://schemas.datacontract.org/2004/07/Server.Core")]
    [System.SerializableAttribute()]
    public partial class FileState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRemovedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRemoved {
            get {
                return this.IsRemovedField;
            }
            set {
                if ((this.IsRemovedField.Equals(value) != true)) {
                    this.IsRemovedField = value;
                    this.RaisePropertyChanged("IsRemoved");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UpdateServer.IUpdateServer")]
    public interface IUpdateServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateServer/RequestDiff", ReplyAction="http://tempuri.org/IUpdateServer/RequestDiffResponse")]
        System.Collections.Generic.Dictionary<string, Launcher.UpdateServer.FileState> RequestDiff(string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateServer/RequestDiff", ReplyAction="http://tempuri.org/IUpdateServer/RequestDiffResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, Launcher.UpdateServer.FileState>> RequestDiffAsync(string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateServer/RequestCurrentFiles", ReplyAction="http://tempuri.org/IUpdateServer/RequestCurrentFilesResponse")]
        System.Collections.Generic.Dictionary<string, string> RequestCurrentFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateServer/RequestCurrentFiles", ReplyAction="http://tempuri.org/IUpdateServer/RequestCurrentFilesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> RequestCurrentFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateServer/GetFilePart", ReplyAction="http://tempuri.org/IUpdateServer/GetFilePartResponse")]
        Launcher.UpdateServer.GetFilePartResponse GetFilePart(Launcher.UpdateServer.GetFilePartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateServer/GetFilePart", ReplyAction="http://tempuri.org/IUpdateServer/GetFilePartResponse")]
        System.Threading.Tasks.Task<Launcher.UpdateServer.GetFilePartResponse> GetFilePartAsync(Launcher.UpdateServer.GetFilePartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateServer/GetHashAlg", ReplyAction="http://tempuri.org/IUpdateServer/GetHashAlgResponse")]
        string GetHashAlg();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateServer/GetHashAlg", ReplyAction="http://tempuri.org/IUpdateServer/GetHashAlgResponse")]
        System.Threading.Tasks.Task<string> GetHashAlgAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateServer/GetCurrentVersion", ReplyAction="http://tempuri.org/IUpdateServer/GetCurrentVersionResponse")]
        string GetCurrentVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateServer/GetCurrentVersion", ReplyAction="http://tempuri.org/IUpdateServer/GetCurrentVersionResponse")]
        System.Threading.Tasks.Task<string> GetCurrentVersionAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFilePart", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFilePartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string path;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int id;
        
        public GetFilePartRequest() {
        }
        
        public GetFilePartRequest(string path, int id) {
            this.path = path;
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFilePartResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFilePartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] GetFilePartResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool isArchived;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool isLast;
        
        public GetFilePartResponse() {
        }
        
        public GetFilePartResponse(byte[] GetFilePartResult, bool isArchived, bool isLast) {
            this.GetFilePartResult = GetFilePartResult;
            this.isArchived = isArchived;
            this.isLast = isLast;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUpdateServerChannel : Launcher.UpdateServer.IUpdateServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateServerClient : System.ServiceModel.ClientBase<Launcher.UpdateServer.IUpdateServer>, Launcher.UpdateServer.IUpdateServer {
        
        public UpdateServerClient() {
        }
        
        public UpdateServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UpdateServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpdateServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpdateServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<string, Launcher.UpdateServer.FileState> RequestDiff(string version) {
            return base.Channel.RequestDiff(version);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, Launcher.UpdateServer.FileState>> RequestDiffAsync(string version) {
            return base.Channel.RequestDiffAsync(version);
        }
        
        public System.Collections.Generic.Dictionary<string, string> RequestCurrentFiles() {
            return base.Channel.RequestCurrentFiles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> RequestCurrentFilesAsync() {
            return base.Channel.RequestCurrentFilesAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Launcher.UpdateServer.GetFilePartResponse Launcher.UpdateServer.IUpdateServer.GetFilePart(Launcher.UpdateServer.GetFilePartRequest request) {
            return base.Channel.GetFilePart(request);
        }
        
        public byte[] GetFilePart(string path, int id, out bool isArchived, out bool isLast) {
            Launcher.UpdateServer.GetFilePartRequest inValue = new Launcher.UpdateServer.GetFilePartRequest();
            inValue.path = path;
            inValue.id = id;
            Launcher.UpdateServer.GetFilePartResponse retVal = ((Launcher.UpdateServer.IUpdateServer)(this)).GetFilePart(inValue);
            isArchived = retVal.isArchived;
            isLast = retVal.isLast;
            return retVal.GetFilePartResult;
        }
        
        public System.Threading.Tasks.Task<Launcher.UpdateServer.GetFilePartResponse> GetFilePartAsync(Launcher.UpdateServer.GetFilePartRequest request) {
            return base.Channel.GetFilePartAsync(request);
        }
        
        public string GetHashAlg() {
            return base.Channel.GetHashAlg();
        }
        
        public System.Threading.Tasks.Task<string> GetHashAlgAsync() {
            return base.Channel.GetHashAlgAsync();
        }
        
        public string GetCurrentVersion() {
            return base.Channel.GetCurrentVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentVersionAsync() {
            return base.Channel.GetCurrentVersionAsync();
        }
    }
}
